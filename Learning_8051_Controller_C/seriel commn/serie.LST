C51 COMPILER V9.02   SERIE                                                                 01/01/2005 00:29:13 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE SERIE
OBJECT MODULE PLACED IN serie.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE serie.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #define uc unsigned char
   3          //lcd............
   4          sbit rs=P3^4;
   5           sbit en=P3^3;
   6          
   7          void display(uc *str);
   8          void lcd_data(uc);
   9          void lcd_ini();
  10          void lcd_cmd(uc);
  11          //serielj...................
  12          void sendString(uc *str);
  13          //unsigned char recvbyte();
  14          void sendbyte(uc);
  15          void delay(unsigned int y);
  16          void seriel_ini();
  17          
  18          unsigned char mybyte;
  19          //void seriel() interrupt 4
  20          //{
  21          //if(RI==1)
  22          //{
  23          
  24          //mybyte=SBUF;
  25          //lcd_data(mybyte);
  26          //RI=0;
  27          //}
  28          //else
  29          //TI=0;
  30          //
  31          //}
  32          void main()
  33          {
  34   1       P2=0;
  35   1       P1=0;
  36   1       //lcd_ini();
  37   1       delay(5);
  38   1       seriel_ini();
  39   1        delay(500);
  40   1      delay(200);
  41   1       //lcd_cmd(0x80);
  42   1       //lcd_cmd(0x80);
  43   1      
  44   1      while(1)
  45   1              {
  46   2               sendString("hello.........");
  47   2              }
  48   1      }
  49          
  50          // lcd fns.........................
  51                     void lcd_ini()
  52          {
  53   1      lcd_cmd(0x01);
  54   1      delay(10);
  55   1      lcd_cmd(0x0c);
C51 COMPILER V9.02   SERIE                                                                 01/01/2005 00:29:13 PAGE 2   

  56   1      delay(10);
  57   1      lcd_cmd(0x38);
  58   1      delay(10);
  59   1        lcd_cmd(0x02);   
  60   1        delay(10);
  61   1      }
  62          
  63          void lcd_cmd(uc cmdword)
  64          {         
  65   1      rs=0; 
  66   1      P2=cmdword;
  67   1      en=1;
  68   1      delay(20);
  69   1      en=0;
  70   1      delay(20);
  71   1      }
  72          
  73            void lcd_data(uc databyte)
  74          {
  75   1      rs=1;
  76   1      P2=databyte;
  77   1      en=1;
  78   1      delay(20);
  79   1      en=0;
  80   1      delay(20);
  81   1      }
  82          
  83          void display(uc *str)
  84          {
  85   1      delay(10);
  86   1      while(*str)
  87   1      {
  88   2      lcd_data(*str);
  89   2      delay(10);
  90   2      str++;
  91   2      }
  92   1      }
  93          // seriel fns..........................
  94          void seriel_ini()
  95          {
  96   1      delay(10);
  97   1      TMOD=0x20;
  98   1      SCON=0x50;
  99   1      //IE=0X90;
 100   1      TH1=0xFD;
 101   1      TR1=1;
 102   1      }
 103          void sendString(uc *str)
 104          {
 105   1      delay(10);
 106   1      while(*str)
 107   1      {
 108   2      delay(1000);
 109   2      sendbyte(*str);
 110   2      str++;
 111   2      }
 112   1      }
 113          void sendbyte(uc ch)
 114          {
 115   1      SBUF=ch;
 116   1      delay(20);
 117   1      while(!TI);
C51 COMPILER V9.02   SERIE                                                                 01/01/2005 00:29:13 PAGE 3   

 118   1      TI=0;
 119   1      }
 120          void delay(unsigned int y)
 121          {
 122   1      unsigned int i,k;
 123   1      for(i=0;i<y;i++)
 124   1      for(k=0;k<250;k++);
 125   1      }
 126          //unsigned char recvbyte()
 127          //{
 128          //delay(20);
 129          //while(!RI);
 130          //RI=0;
 131          //return(SBUF);
 132          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    280    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
